setwd("D:\\DOCS\\Kaggle\\Smartphone")
library(caret)
library(foreach)
library(doParallel)
training = read.csv("train.csv", header = T, na.string=c("","NA"));
testing = read.csv("test.csv", header = T, na.string=c("","NA"));
training = training[,-1]
training[,ncol(training)] = as.factor(training[,ncol(training)])
ID = testing[,1]
testing = testing[,-1]
M = abs(cor(training[,-ncol(training)]))
diag(M) = 0
corrCols = unique(which(M>0.9, arr.ind = TRUE)[,2])
training = training[,-corrCols]
testing = testing[,-corrCols]
cl <- makeCluster(3)
registerDoParallel(cl)
trainControl = trainControl(method = "oob",
#number = 10,
#repeats = 3,
verboseIter = T,
allowParallel = T)
modelFit = train(activity ~.,
data=training,
method="rf",
preProcess = "pca",
PCAthresh = 0.99,
#                 tuneGrid = grid,
trControl = trainControl,
metric="Accuracy")
predictions = predict(modelFit, newdata = training)
confusionMatrix(predictions, training$activity)
modelFit
modelFit$modelInfo
modelFit$resample
print(modelFit)
modelFit = train(activity ~.,
data=training,
method="rf",
preProcess = "pca",
PCAthresh = 0.99,
#                 tuneGrid = grid,
trControl = trainControl)
print(modelFit)
modelFit$method
modelFit$modelInfo
modelFit$bestTune
modelFit$metric
modelFit = train(activity ~.,
data=training,
method="rf",
preProcess = "pca",
PCAthresh = 0.99,
#                 tuneGrid = grid,
trControl = trainControl,
metric="oob")
print(modelFit$finalModel)
modelFit = train(activity ~.,
data=training,
method="rf",
preProcess = c("scale","center"),
#PCAthresh = 0.99,
#                 tuneGrid = grid,
trControl = trainControl,
metric="ROC")
print(modelFit$finalModel)
predictions = predict(modelFit, newdata = training)
confusionMatrix(predictions, training$activity)
print(modelFit$finalModel)
modelFit
grid = expand.grid(mtry=c(20,40,60,80,100))
trainControl = trainControl(method = "oob",
#number = 10,
#repeats = 3,
summaryFunction = twoClassSummary,
verboseIter = T,
allowParallel = T)
modelFit = train(activity ~.,
data=training,
method="rf",
preProcess = c("scale","center"),
#PCAthresh = 0.99,
#                 tuneGrid = grid,
trControl = trainControl,
metric="ROC")
print(modelFit$finalModel)
trainControl = trainControl(method = "oob",
#number = 10,
#repeats = 3,
#summaryFunction = twoClassSummary,
verboseIter = T,
allowParallel = T)
grid = expand.grid(mtry=c(20,40,60,80,100))
modelFit = train(activity ~.,
data=training,
method="rf",
preProcess = c("scale","center"),
#PCAthresh = 0.99,
#                 tuneGrid = grid,
trControl = trainControl,
metric="Accuracy")
modelFit = train(activity ~.,
data=training,
method="rf",
preProcess = c("scale","center"),
#PCAthresh = 0.99,
tuneGrid = grid,
trControl = trainControl,
metric="Accuracy")
print(modelFit$finalModel)
modelFit
grid = expand.grid(mtry=c(25,35,45), ntrees = 1000)
modelFit = train(activity ~.,
data=training,
method="rf",
preProcess = c("scale","center"),
#PCAthresh = 0.99,
tuneGrid = grid,
trControl = trainControl,
metric="Accuracy")
grid = expand.grid(mtry=c(25,35,45))
modelFit = train(activity ~.,
data=training,
method="rf",
preProcess = c("scale","center"),
#PCAthresh = 0.99,
tuneGrid = grid,
trControl = trainControl,
metric="Accuracy")
modelFit
modelFit$finalModel
grid = expand.grid(mtry=c(15,22,27))
modelFit = train(activity ~.,
data=training,
method="rf",
preProcess = c("scale","center"),
#PCAthresh = 0.99,
ntree = 1000,
tuneGrid = grid,
trControl = trainControl,
metric="Accuracy")
modelFit$finalModel
modelFit
grid = expand.grid(mtry=c(20,21,22,23,24,25))
modelFit = train(activity ~.,
data=training,
method="rf",
preProcess = c("scale","center"),
#PCAthresh = 0.99,
ntree = 1500,
tuneGrid = grid,
trControl = trainControl,
metric="Accuracy")
modelFit
modelFit$finalModel
grid = expand.grid(mtry=c(22))
modelFit = train(activity ~.,
data=training,
method="rf",
preProcess = c("scale","center"),
#PCAthresh = 0.99,
ntree = 1500,
tuneGrid = grid,
trControl = trainControl,
metric="Kappa")
modelFit$finalModel
modelFit
modelFit = train(activity ~.,
data=training,
method="rf",
preProcess = c("YeoJohnson"),
#PCAthresh = 0.99,
ntree = 1500,
#                 tuneGrid = grid,
trControl = trainControl,
metric="Kappa")
modelFit$finalModel
modelFit
grid = expand.grid(mtry=c(22))
modelFit = train(activity ~.,
data=training,
method="rf",
preProcess = c("YeoJohnson"),
#PCAthresh = 0.99,
ntree = 1500,
tuneGrid = grid,
trControl = trainControl,
metric="Kappa")
modelFit
modelFit$finalModel
modelFit = train(activity ~.,
data=training,
method="rf",
preProcess = c("spatialSign"),
#PCAthresh = 0.99,
ntree = 1500,
#tuneGrid = grid,
trControl = trainControl,
metric="Kappa")
modelFit
modelFit$finalModel
grid = expand.grid(mtry=c(22))
modelFit = train(activity ~.,
data=training,
method="rf",
preProcess = c("center","scale"),
#PCAthresh = 0.99,
ntree = 2000,
#tuneGrid = grid,
trControl = trainControl,
metric="Kappa")
modelFit$finalModel
grid = expand.grid(mtry=c(22))
modelFit = train(activity ~.,
data=training,
method="rf",
preProcess = c("center","scale"),
#PCAthresh = 0.99,
ntree = 2000,
tuneGrid = grid,
trControl = trainControl,
metric="Kappa")
modelFit$finalModel
modelFit
predictions = predict(modelFit, newdata = training)
confusionMatrix(predictions, training$activity)
predictions_testing = predict(modelFit, testing)
submission = format(round(data.frame(ID,predictions_testing),1),nsmall=1)
submission = format(round(data.frame(as.numeric(ID),predictions_testing),1),nsmall=1)
submission = format(round(data.frame(as.numeric(ID),as.numeric(predictions_testing)),1),nsmall=1)
submission_old = read.csv(file = "submission2.csv",header = T)
sum(as.integer(submission[,2])!=as.integer(submission_old[,2])) #135
write("ID,activity",file = "submission.csv")
write.table(submission, file="submission.csv", sep=",",row.names = F,col.names=F,quote = F,append = T)
stopCluster(cl)
